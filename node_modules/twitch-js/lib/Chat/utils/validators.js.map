{"version":3,"sources":["../../../src/Chat/utils/validators.js"],"names":["constants","sanitizers","chatOptions","shape","username","token","connectionTimeout","joinTimeout","debug","options","maybeOptions","oauth","CONNECTION_TIMEOUT","JOIN_TIMEOUT","clientOptions","server","port","ssl","CHAT_SERVER","CHAT_SERVER_SSL_PORT"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAIA;;IAAYA,S;;AACZ;;IAAYC,U;;;;;;AAEZ,IAAMC,cAAc,SAAdA,WAAc,eAAgB;AAClC;;;;;;;;;AASA,MAAMC,QAAQ;AACZC,gCADY;AAEZC,6BAFY;AAGZC,yCAHY;AAIZC,mCAJY;AAKZC;AALY,GAAd;;AAQA,MAAMC,UAAU,4BACd,EADc,eAETC,YAFS,IAEKC,OAAOV,WAAWU,KAAX,CAAiBD,aAAaL,KAA9B,CAFZ,KAGd;AACEC,uBAAmBN,UAAUY,kBAD/B;AAEEL,iBAAaP,UAAUa,YAFzB;AAGEL,WAAO;AAHT,GAHc,CAAhB;;AAUA,2BACE,0BAAWC,OAAX,EAAoBN,KAApB,CADF,EAEE,kDAFF;;AAKA,SAAOM,OAAP;AACD,CAlCD;;AAoCA,IAAMK,gBAAgB,SAAhBA,aAAgB,eAAgB;AACpC,MAAMX,QAAQ;AACZC,gCADY;AAEZO,6BAFY;AAGZI,8BAHY;AAIZC,4BAJY;AAKZC;AALY,GAAd;;AAQA,MAAMR,UAAU,4BACd,EADc,eAETC,YAFS,IAEKC,OAAOV,WAAWU,KAAX,CAAiBD,aAAaL,KAA9B,CAFZ,KAGd;AACEU,YAAQf,UAAUkB,WADpB;AAEEF,UAAMhB,UAAUmB,oBAFlB;AAGEF,SAAK;AAHP,GAHc,CAAhB;;AAUA,2BACE,0BAAWR,OAAX,EAAoBN,KAApB,CADF,EAEE,yDAFF;;AAKA,SAAOM,OAAP;AACD,CAzBD;;QA2BSP,W,GAAAA,W;QAAaY,a,GAAAA,a","file":"validators.js","sourcesContent":["import invariant from 'invariant'\n\nimport { conformsTo, defaultsDeep, isString, isFinite, isBoolean } from 'lodash'\n\nimport * as constants from '../constants'\nimport * as sanitizers from './sanitizers'\n\nconst chatOptions = maybeOptions => {\n  /**\n   * Chat options\n   * @typedef {Object} ChatOptions\n   * @property {string} username\n   * @property {string} token OAuth token (use {@link https://twitchapps.com/tmi/} to generate one)\n   * @property {number} [connectionTimeout={@link CONNECTION_TIMEOUT}]\n   * @property {number} [joinTimeout={@link JOIN_TIMEOUT}]\n   * @property {boolean} [debug=false]\n   */\n  const shape = {\n    username: isString,\n    token: isString,\n    connectionTimeout: isFinite,\n    joinTimeout: isFinite,\n    debug: isBoolean,\n  }\n\n  const options = defaultsDeep(\n    {},\n    { ...maybeOptions, oauth: sanitizers.oauth(maybeOptions.token) },\n    {\n      connectionTimeout: constants.CONNECTION_TIMEOUT,\n      joinTimeout: constants.JOIN_TIMEOUT,\n      debug: false,\n    },\n  )\n\n  invariant(\n    conformsTo(options, shape),\n    '[twitch-js/Chat] options: Expected valid options',\n  )\n\n  return options\n}\n\nconst clientOptions = maybeOptions => {\n  const shape = {\n    username: isString,\n    oauth: isString,\n    server: isString,\n    port: isFinite,\n    ssl: isBoolean,\n  }\n\n  const options = defaultsDeep(\n    {},\n    { ...maybeOptions, oauth: sanitizers.oauth(maybeOptions.token) },\n    {\n      server: constants.CHAT_SERVER,\n      port: constants.CHAT_SERVER_SSL_PORT,\n      ssl: true,\n    },\n  )\n\n  invariant(\n    conformsTo(options, shape),\n    '[twitch-js/Chat/Client] options: Expected valid options',\n  )\n\n  return options\n}\n\nexport { chatOptions, clientOptions }\n"]}