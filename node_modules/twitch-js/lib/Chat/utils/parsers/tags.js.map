{"version":3,"sources":["../../../../src/Chat/utils/parsers/tags.js"],"names":["types","clearChat","tags","banReason","generalString","banDuration","generalNumber","globalUserState","emoteSets","userType","username","displayName","isTurboSubscriber","generalBoolean","turbo","privateMessage","userState","roomState","broadcasterLanguage","broadcasterLang","slowDelay","parseInt","slow","isEmoteOnly","emoteOnly","isFollowersOnly","followersOnly","isR9kEnabled","r9k","isSubscribersOnly","subsOnly","userNotice","badges","bits","emotes","isModerator","mod","isSubscriber","subscriber"],"mappings":";;;;;;;;;;;;;AAEA;;IAAYA,K;;;;;;AAEZ;;;;;;;AAOA,IAAMC,YAAY,SAAZA,SAAY;AAAA,sBACbC,IADa;AAEhBC,eAAWH,MAAMI,aAAN,CAAoBF,KAAKC,SAAzB,CAFK;AAGhBE,iBAAaL,MAAMM,aAAN,CAAoBJ,KAAKG,WAAzB;AAHG;AAAA,CAAlB;;AAMA;;;;;;;;;AASA,IAAME,kBAAkB,SAAlBA,eAAkB;AAAA,sBACnBL,IADmB;AAEtBM,eAAWR,MAAMQ,SAAN,CAAgBN,KAAKM,SAArB,CAFW;AAGtBC,cAAUT,MAAMS,QAAN,CAAeP,KAAKO,QAApB,CAHY;AAItBC,cAAU,uBAAQR,KAAKS,WAAb,CAJY;AAKtBC,uBAAmBZ,MAAMa,cAAN,CAAqBX,KAAKY,KAA1B;AALG;AAAA,CAAxB;;AAQA;;;;AAIA,IAAMC,iBAAiB,SAAjBA,cAAiB;AAAA,SAAaC,qCAAb;AAAA,CAAvB;;AAEA;;;;;;;;;;;AAWA,IAAMC,YAAY,SAAZA,SAAY;AAAA,sBACbf,IADa;AAEhBgB,yBAAqBlB,MAAMkB,mBAAN,CAA0BhB,KAAKiB,eAA/B,CAFL;AAGhBC,eAAWC,SAASnB,KAAKoB,IAAd,EAAoB,EAApB,CAHK;AAIhBC,iBAAavB,MAAMa,cAAN,CAAqBX,KAAKsB,SAA1B,CAJG;AAKhBC,qBAAiBzB,MAAMa,cAAN,CAAqBX,KAAKwB,aAA1B,CALD;AAMhBC,kBAAc3B,MAAMa,cAAN,CAAqBX,KAAK0B,GAA1B,CANE;AAOhBC,uBAAmB7B,MAAMa,cAAN,CAAqBX,KAAK4B,QAA1B;AAPH;AAAA,CAAlB;;AAUA;;;;AAIA,IAAMC,aAAa,SAAbA,UAAa;AAAA,SAAaf,qCAAb;AAAA,CAAnB;;AAEA;;;;;;;;;;;;AAYA,IAAMA,YAAY,SAAZA,SAAY;AAAA,sBACbd,IADa;AAEhB8B,YAAQhC,MAAMgC,MAAN,CAAa9B,KAAK8B,MAAlB,CAFQ;AAGhBC,UAAMjC,MAAMM,aAAN,CAAoBJ,KAAK+B,IAAzB,CAHU;AAIhBC,YAAQlC,MAAMkC,MAAN,CAAahC,KAAKgC,MAAlB,CAJQ;AAKhB1B,eAAWR,MAAMQ,SAAN,CAAgBN,KAAKM,SAArB,CALK;AAMhBC,cAAUT,MAAMS,QAAN,CAAeP,KAAKO,QAApB,CANM;AAOhB0B,iBAAanC,MAAMa,cAAN,CAAqBX,KAAKkC,GAA1B,CAPG;AAQhBC,kBAAcrC,MAAMa,cAAN,CAAqBX,KAAKoC,UAA1B,CARE;AAShB1B,uBAAmBZ,MAAMa,cAAN,CAAqBX,KAAKY,KAA1B;AATH;AAAA,CAAlB;;QAaEb,S,GAAAA,S;QACAM,e,GAAAA,e;QACAQ,c,GAAAA,c;QACAE,S,GAAAA,S;QACAc,U,GAAAA,U;QACAf,S,GAAAA,S","file":"tags.js","sourcesContent":["import { toLower } from 'lodash'\n\nimport * as types from './types'\n\n/**\n * CLEARCHAT tags\n * @typedef {Object} ClearChatTags\n * @property {string} [banReason]\n * @property {number} [banDuration]\n * @see https://dev.twitch.tv/docs/irc/tags#clearchat-twitch-tags\n */\nconst clearChat = tags => ({\n  ...tags,\n  banReason: types.generalString(tags.banReason),\n  banDuration: types.generalNumber(tags.banDuration),\n})\n\n/**\n * GLOBALUSERSTATE tags\n * @typedef {Object} GlobalUserStateTags\n * @property {Array<string>} emoteSets\n * @property {string} userType\n * @property {string} username\n * @property {boolean} isTurboSubscriber\n * @see https://dev.twitch.tv/docs/irc/tags#globaluserstate-twitch-tags\n */\nconst globalUserState = tags => ({\n  ...tags,\n  emoteSets: types.emoteSets(tags.emoteSets),\n  userType: types.userType(tags.userType),\n  username: toLower(tags.displayName),\n  isTurboSubscriber: types.generalBoolean(tags.turbo),\n})\n\n/** PRIVMSG tags\n * @typedef {UserStateTags} PrivateMessageTags\n * @see https://dev.twitch.tv/docs/irc/tags#privmsg-twitch-tags\n */\nconst privateMessage = (...args) => userState(...args)\n\n/**\n * ROOMSTATE Tag\n * @typedef {Object} RoomStateTags\n * @property {string} broadcasterLanguage\n * @property {number} slowDelay\n * @property {boolean} isFollowersOnly\n * @property {boolean} isSubscribersOnly\n * @property {boolean} isEmoteOnly\n * @property {boolean} isR9kEnabled\n * @see https://dev.twitch.tv/docs/irc/tags#roomstate-twitch-tags\n */\nconst roomState = tags => ({\n  ...tags,\n  broadcasterLanguage: types.broadcasterLanguage(tags.broadcasterLang),\n  slowDelay: parseInt(tags.slow, 10),\n  isEmoteOnly: types.generalBoolean(tags.emoteOnly),\n  isFollowersOnly: types.generalBoolean(tags.followersOnly),\n  isR9kEnabled: types.generalBoolean(tags.r9k),\n  isSubscribersOnly: types.generalBoolean(tags.subsOnly),\n})\n\n/** USERNOTICE tags\n * @typedef {UserStateTags} UserNoticeTags\n * @see https://dev.twitch.tv/docs/irc/tags#usernotice-twitch-tags\n */\nconst userNotice = (...args) => userState(...args)\n\n/**\n * USERSTATE tags\n * @typedef {Object} UserStateTags\n * @property {BadgesTag} badges\n * @property {number} [bits]\n * @property {Object<number, EmoteTag>} emotes\n * @property {Array<string>} emoteSets\n * @property {boolean} isModerator\n * @property {boolean} isSubscriber\n * @property {boolean} isTurboSubscriber\n * @see https://dev.twitch.tv/docs/irc/tags#userstate-twitch-tags\n */\nconst userState = tags => ({\n  ...tags,\n  badges: types.badges(tags.badges),\n  bits: types.generalNumber(tags.bits),\n  emotes: types.emotes(tags.emotes),\n  emoteSets: types.emoteSets(tags.emoteSets),\n  userType: types.userType(tags.userType),\n  isModerator: types.generalBoolean(tags.mod),\n  isSubscriber: types.generalBoolean(tags.subscriber),\n  isTurboSubscriber: types.generalBoolean(tags.turbo),\n})\n\nexport {\n  clearChat,\n  globalUserState,\n  privateMessage,\n  roomState,\n  userNotice,\n  userState,\n}\n"]}