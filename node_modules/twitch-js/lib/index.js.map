{"version":3,"sources":["../src/index.js"],"names":["TwitchJs","token","username","chat","api","chatConstants","Chat","ChatConstants"],"mappings":";;;;;;;;;AAAA;;;;AACA;;;;;;;;AAEA;;;;;;;;;;;;;;;IAeMA,Q;AACJ;;;;;;;;AAQA,wBAA4C;AAAA,MAA9BC,KAA8B,QAA9BA,KAA8B;AAAA,MAAvBC,QAAuB,QAAvBA,QAAuB;AAAA,MAAbC,IAAa,QAAbA,IAAa;AAAA,MAAPC,GAAO,QAAPA,GAAO;;AAAA;;AAC1C;AACA,OAAKD,IAAL,GAAY,gCAAcA,IAAd,IAAoBF,YAApB,EAA2BC,kBAA3B,IAAZ;AACA;AACA,OAAKG,aAAL;;AAEA;AACA,OAAKD,GAAL,GAAW,+BAAaA,GAAb,IAAkBH,YAAlB,EAAyBC,kBAAzB,IAAX;AACD,C;;QAGMI,I;QAAMC,a;kBACAP,Q","file":"index.js","sourcesContent":["import Chat, { constants as ChatConstants } from './Chat'\nimport Api from './Api'\n\n/**\n * TwitchJs client\n * @example <caption>Instantiating TwitchJS</caption>\n * const token = 'cfabdegwdoklmawdzdo98xt2fo512y'\n * const username = 'ronni'\n * const twitchJs = new TwitchJs({ token, username })\n *\n * twitchJs.chat.connect().then(globalUserState => {\n *   // Do stuff ...\n * })\n *\n * twitchJs.api.get('channel').then(response => {\n *   // Do stuff ...\n * })\n */\nclass TwitchJs {\n  /**\n   * TwitchJs constructor\n   * @param {Object} options\n   * @param {string} options.token\n   * @param {string} options.username\n   * @param {ChatOptions} [options.chat]\n   * @param {ApiOptions} [options.api]\n   */\n  constructor({ token, username, chat, api }) {\n    /** @type {Chat} */\n    this.chat = new Chat({ ...chat, token, username })\n    /** @type {Object} */\n    this.chatConstants = ChatConstants\n\n    /** @type {Api} */\n    this.api = new Api({ ...api, token, username })\n  }\n}\n\nexport { Chat, ChatConstants }\nexport default TwitchJs\n"]}