'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ChatConstants = exports.Chat = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _Chat = require('./Chat');

var _Chat2 = _interopRequireDefault(_Chat);

var _Api = require('./Api');

var _Api2 = _interopRequireDefault(_Api);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * TwitchJs client
 * @example <caption>Instantiating TwitchJS</caption>
 * const token = 'cfabdegwdoklmawdzdo98xt2fo512y'
 * const username = 'ronni'
 * const twitchJs = new TwitchJs({ token, username })
 *
 * twitchJs.chat.connect().then(globalUserState => {
 *   // Do stuff ...
 * })
 *
 * twitchJs.api.get('channel').then(response => {
 *   // Do stuff ...
 * })
 */
var TwitchJs =
/**
 * TwitchJs constructor
 * @param {Object} options
 * @param {string} options.token
 * @param {string} options.username
 * @param {ChatOptions} [options.chat]
 * @param {ApiOptions} [options.api]
 */
function TwitchJs(_ref) {
  var token = _ref.token,
      username = _ref.username,
      chat = _ref.chat,
      api = _ref.api;

  _classCallCheck(this, TwitchJs);

  /** @type {Chat} */
  this.chat = new _Chat2.default(_extends({}, chat, { token: token, username: username }));
  /** @type {Object} */
  this.chatConstants = _Chat.constants;

  /** @type {Api} */
  this.api = new _Api2.default(_extends({}, api, { token: token, username: username }));
};

exports.Chat = _Chat2.default;
exports.ChatConstants = _Chat.constants;
exports.default = TwitchJs;
//# sourceMappingURL=index.js.map